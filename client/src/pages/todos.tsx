import { type NextPage } from 'next';
import Head from 'next/head';
import TodoItem from '~/components/todo-item';
import { TodoQuery, getTodos } from '~/api/router';
import { Todo } from '~/types';
import { useQuery } from 'react-query';
import { useEffect, useState } from 'react';
import TodoFilter from '~/components/todo-filter';

const Todos: NextPage = () => {
	const today = new Date();
	const [filters, setFilters] = useState<TodoQuery>({});

	const { isLoading, data, refetch } = useQuery({
		queryKey: ['todos'],
		queryFn: () => getTodos(filters),
		refetchOnWindowFocus: false,
	});

	useEffect(() => {
		refetch();
	}, [filters]);

	const notDoneFirst = (data?: Todo[]) => {
		if (!data) return [];
		return data.sort((todo) => (todo.isDone ? 1 : -1));
	};

	return (
		<>
			<Head>
				<title>All Tasks - Quick Todo</title>
				<meta name="description" content="Generated by create-t3-app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<main className="flex flex-col items-center justify-center h-full">
				<div className="w-3/5 flex justify-between">
					<p className="text-3xl w-fit">All Tasks</p>
				</div>
				{isLoading ? (
					<span className="loading loading-bars loading-lg"></span>
				) : (
					<div className="w-full">
						<div className="w-3/5 mx-auto">
							<div className="divider"></div>
							<TodoFilter filters={filters} setFilters={setFilters} />
						</div>

						<div className="w-full flex flex-col items-center">
							{data?.data.length === 0 ? <div className="mx-auto text-md italic text-gray-500 my-4">There are no tasks</div> : null}

							{notDoneFirst(data?.data).map((todo: Todo) => {
								return <TodoItem key={todo.id} {...todo} />;
							})}
						</div>
					</div>
				)}
			</main>
		</>
	);
};

export default Todos;
