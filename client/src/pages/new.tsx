import { type NextPage } from 'next';
import Head from 'next/head';
import React from 'react';
import { SubmitHandler, useForm } from 'react-hook-form';

type FormValues = {
	title: string;
	categoryId?: string;
	dueAt: Date;
};

const NewTodo: NextPage = () => {
	const {
		register,
		handleSubmit,
		formState: { errors },
	} = useForm();

	const onSubmit: SubmitHandler<FormValues> = (data) => console.log(data);

	return (
		<>
			<Head>
				<title>Add Todo - Quick Todo</title>
				<meta name="description" content="Generated by create-t3-app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<main className="flex flex-col h-full w-full items-center justify-center">
				<div className="w-3/5">
					<p className="text-2xl text-left">Add new todo</p>
					<div className="divider"></div>
				</div>
				<form
					className="w-1/2 space-y-2"
					onSubmit={handleSubmit(onSubmit)}>
					<div className="form-control w-full">
						<label className="label">
							<span className="label-text">Task Description</span>
						</label>
						<input
							type="text"
							placeholder="Type here"
							className="input input-bordered w-full"
							{...register('title', { required: true })}
						/>
						{errors?.title && (
							<label className="label">
								<span className="label-text-alt text-red-500">
									This field is required!
								</span>
							</label>
						)}
					</div>
					<div className="form-control w-full">
						<label className="label">
							<span className="label-text">Select Category</span>
						</label>
						<select
							className="select select-bordered w-full text-gray-400"
							{...register('category')}>
							<option value="Personal">Personal</option>
							<option value="Work">Work</option>
							<option value="Family">Family</option>
						</select>
					</div>
					<div className="form-control w-full">
						<label className="label">
							<span className="label-text">Task Due</span>
						</label>
						<input
							{...register('dueAt', {
								required: true,
								valueAsDate: true,
							})}
							type="datetime-local"
							placeholder="Type here"
							className="input input-bordered w-full"
						/>
						{errors?.dueAt && (
							<label className="label">
								<span className="label-text-alt text-red-500">
									This field is required!
								</span>
							</label>
						)}
					</div>
					<div className="form-control pt-2">
						<input type="submit" className="btn btn-primary" />
					</div>
				</form>
			</main>
		</>
	);
};

export default NewTodo;
